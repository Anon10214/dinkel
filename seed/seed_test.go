package seed_test

import (
	"fmt"
	"testing"

	"github.com/Anon10214/dinkel/seed"
	"github.com/stretchr/testify/assert"
)

// Test that the pregenerated byte string returns the passed bytes in order
func ExampleGetPregeneratedByteString() {
	byteString := []byte{0, 1, 2, 3, 4, 5, 6, 7, 8, 9}
	seed := seed.GetPregeneratedByteString(byteString)

	for range byteString {
		fmt.Printf("%d ", seed.GetByte())
	}
	// Output: 0 1 2 3 4 5 6 7 8 9
}

// Ensure that the pregenerated byte string returns further bytes after running out
func TestPregeneratedByteString_RunningOut(t *testing.T) {
	byteString := []byte{0b10101010}
	seed := seed.GetPregeneratedByteString(byteString)

	assert.Equal(t, byteString[0], seed.GetByte(), "Pregenerated Byte String returned wrong byte")

	// Byte string is now empty, must generate more random bytes
	for i := 0; i < 100; i++ {
		byteString = append(byteString, seed.GetByte())
	}

	assert.Equal(t, byteString, seed.GetByteString(), "Pregenerated Byte String underlying byte string mismatch")
}
